syntax = "proto3";

package calculator;
option go_package="calculatorpb";

message Operation {
    double numberOne = 1;
    double numberTwo = 2;
}

message CalcRequest {
    Operation operation = 1;
}

message CalcResponse {
    double result = 1;
}

message PrimeNumberDecompositionRequest {
    int64 number = 1;
}

message PrimeNumberDecompositionResponse {
    int64 prime_factor = 1;
}


message ComputeAverageRequest{
    int32 number = 1;
}

message ComputeAverageResponse {
    double average = 1;
}

message FindMaximumRequest {
    int32 number = 1;
}

message FindMaximumResponse {
    int32 maximum = 1;
}

message SquareRootRequest {
    int32 number = 1;
}

message SquareRootResponse {
    double number_root = 1;
}


service CalculatorService {
    // Unary
    rpc Sun(CalcRequest) returns (CalcResponse){};
    rpc Multiply(CalcRequest) returns (CalcResponse){};
    
    // Server Stream
    rpc PrimeNumberDecomposition(PrimeNumberDecompositionRequest) returns (stream PrimeNumberDecompositionResponse){}
    
    // Client Stream
    rpc ComputeAverage(stream ComputeAverageRequest) returns (ComputeAverageResponse);
    
    // BiDi Stream
    rpc FindMaximum (stream FindMaximumRequest) returns (stream FindMaximumResponse);

    // error handling
    // This RPC throw an exception if the sent number is negative
    // The error being sent is of type INAVLID_ARGUMENT
    rpc SquareRoot (SquareRootRequest) returns (SquareRootResponse);
} 